#!/bin/make
# Makefile for top ($msRoot) directory

# order matters
curMkfil:=$(lastword $(MAKEFILE_LIST))

export msSrc := ${CURDIR}/src
export ms3rd := ${CURDIR}/pkgs

# Use .env file to set msInst, msTstDir and/or msBilDir vars
ifneq ($(wildcard ${CURDIR}/.env),)
  include ${CURDIR}/.env
endif

export msInst ?= $(abspath ${msSrc}/..)
export msTstDir ?= ${msInst}/test_runs


#nproc = $(shell $(( $nproc < 1 ? 4 : $nproc )))
#nproc = $(shell $(( $nproc > 31 ? 31 : $nproc )))


# Build for Linux
all:            checkRoot
	mkdir -p ${msInst}/lib
	mkdir -p ${msInst}/bin
	mkdir -p ${msInst}/include
	(cd ${ms3rd} && $(MAKE) -f ${msSrc}/script/makefile.3rd  zlib)
	(cd ${ms3rd} && $(MAKE) -f ${msSrc}/script/makefile.3rd )
	(cd ${msSrc} && $(MAKE) -f ${msSrc}/script/Makefile.in recurseMake USE_msRecurse=1)
	@echo done

# Build for Windows
mgw:            checkRoot
	mkdir -p ${msInst}/lib
	mkdir -p ${msInst}/bin
	mkdir -p ${msInst}/include
	(cd ${ms3rd} && $(MAKE) -f ${msSrc}/script/makefile.3rd  OPT=.exe)
	(cd ${msSrc} && $(MAKE) -f ${msSrc}/script/Makefile.in recurseMake  OPT=.exe USE_msRecurse=1)
	(cd ${msInst}/bin && make -f ${msSrc}/script/Makefile.msRoot  checksum) || echo check checksum
	@echo done


clean:          checkRoot
	(cd ${ms3rd} && $(MAKE) -f ${msSrc}/script/makefile.3rd  clean)
	(cd ${msSrc} && $(MAKE) -f ${msSrc}/script/Makefile.in recurseClean USE_msRecurse=1)
	rm -rf  ${msInst}/build ${msSrc}/*/__pycache__  log.make

distclean:      checkRoot clean
	@echo "\n\nWarning:\n\n   deleting log.make, bin/, include/, lib/, share/ and test/, in 10s\n"
	@bash -c 'read -t 10 -p "   press Entre to proceed,  Ctrl+c to stop? "' || echo deleting
	sleep 2
	rm -rf   ${msInst}/bin  ${msInst}/include  ${msInst}/lib  ${msInst}/share ${msInst}/test
	(cd ${ms3rd} && $(MAKE) -f ${msSrc}/script/makefile.3rd  distclean)

checkRoot:
	@echo  "src/script/Makefile.msRoot == ${curMkfil}? "
	@[ "src/script/Makefile.msRoot" =  "${curMkfil}" ] || (echo Error: ran make from wrong directory && false)
	@echo  :/


checksum:
	sha256sum *.exe > checksums_sha256.md
	printf '\n\nTo validate above .exe files in Windows PowerShell, run:\n\n' >> checksums_sha256.md
	printf '    certutil -hashfile   c:path/to/file.exe   SHA256\n\n'         >> checksums_sha256.md
	printf 'and compare the output with the above SHA256 checksums.\n\n'      >> checksums_sha256.md
	printf 'Or in Linux run from the bin/ directory:\n\n'                     >> checksums_sha256.md
	printf '    sha256sum -c checksums_sha256.md\n\n'                         >> checksums_sha256.md


run_tests: checkRoot
	(cd ${msSrc} && $(MAKE) -f ${msSrc}/script/Makefile.in recurseTest USE_msRecurse=1)

test: checkRoot run_tests
	@echo "\n\033[34m Checking the test logs: \033[0m\n"
	@for cas in $(shell find test_runs/ -type f | grep log) ; do \
		(! grep -3 -E '\bError|\bFATAL|\bterminate|\bAborted|\bAborting|: error'  $${cas} ) \
		|| printf "\n\n^^^\033[91m Error in $${cas} \033[0m \n================================================\n\n"; \
	done
	@for cas in $(shell find test_runs/ -type f | grep log) ; do \
		(! grep -3 -E '\bError|\bFATAL|\bterminate|\bAborted|\bAborting|: error'  $${cas} >/dev/null )\
		|| exit 1; \
	done
	@echo "\033[34m No errors detected \033[0m"


# not used yet
installDir?=$(HOME)/.local/
install:
	mkdir -p $(installDir)bin/
	cp -rp bin  $(installDir)
	cp -rp lib  $(installDir)
	cp -p  src/bashrc  $(installDir)bin/
	cp -rp src/script $(installDir)bin/
