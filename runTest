#!/bin/bash

# run tests using this script to allow report failure/success of the test

#set -ex # exit on any error

tstDir=$1;   tstApp=$2;  tstInp=$3;  apsDir=$4


[ -n "$apsDir" ] || apsDir=$(cd "$(dirname ${BASH_SOURCE[0]})/../.." && pwd)

if [ -z "$msInst" ] || ! [  "$PATH" == *"$msInst/bin"* ] ; then
  echo "source $apsDir/src/script/bashrc";
	source  $apsDir/src/script/bashrc
else  [ "$msRoot" == "$apsDir" ] || exit ; fi

checkErr() {
  task="$(echo $1 | sed 's/log\./  /')"
  Er="$(grep -E '\bError|\bterminate|\bAborting|: error' $1 || true)" # grep returns 1 (==false) if no match found
  [ "$2" == "0" ] ||  Er="  $Er\n  See $1"

  if [ -z "$Er" ]; then    echo  "Succeed @ $task"
  else printf '\n\033[91m'"$Er"'\033[0m\n\n';  fi
  if xhost >/dev/null 2>&1 ; then
    if [ -z "$Er" ]; then  notify-send "Succeed @$task" &
    else                   notify-send " Failed @$task" & geany "$1" || gedit "$1";  fi
  fi
}

usage() {
  printf "Usage:\n  runTest tstDir   tstApp  tstInp  apsDir
  \nExamples:
    $0  /mnt/ramd/tst/Gao2017GNM  gnrun  $msRoot/src/gnm/script/Gao2017_gnrun.sin  $msRoot
    $0  $msRoot  make
    $0  $msRoot  'make dbg'  '' $msRoot
    $0  $msRoot  'make .exe' '' $msRoot\n"
}
[ -f  "$tstApp" ] || which $tstApp >/dev/null  || (! usage) || exit



mkdir -p $tstDir
# Rename input as backup in test folder. If not renamed, gnu-make interprets it as up-to-date and refuses to re-run the test
[ -n "$tstInp" ] && cp $tstInp $tstDir/input_$(basename $tstApp)_$(basename $tstInp)
#[ -n "$tstInp" ] && tstInp=$(basename $tstInp)

logf=log.$(basename $(echo $tstApp | sed 's/ \+/_/g'))
[ -n "$tstInp" ] && logf+=_$(basename $tstInp)

echo  "$tstApp $tstInp > $tstDir/$logf "
(cd $tstDir/ &&  $tstApp $tstInp  >$logf 2>&1);  ret=$?
checkErr "$tstDir/$logf" $ret
exit $ret
